# Anchors
DoneTask: &done
  class: DoneTaskFactory
  config:
    conditional: false
ErrorTask: &error
  class: ErrorTaskFactory
  config:
    conditional: false
    trigger_abort: true
MinLengthTask: &min_length
  class: MinLengthTaskFactory
  config:
    conditional: true
    inputs: [input_data]
    outputs: [min_len_output_data]
    format_result_as_input: false
KinematicLimitsCheckTask: &limits_check
  class: KinematicLimitsCheckTaskFactory
  config:
    conditional: true
    inputs: [output_data]
    outputs: [output_data]

# Task composer configuration
task_composer_plugins:
  search_libraries:
    - snp_motion_planning_tasks
  executors:
    default: TaskflowExecutor
    plugins:
      TaskflowExecutor:
        class: TaskflowTaskComposerExecutorFactory
        config:
          threads: 8
  tasks:
    plugins:    
      SNPCartesianPipeline:
        class: GraphTaskFactory
        config:
          inputs: [input_data]
          outputs: [output_data]
          nodes:
            DoneTask: *done
            ErrorTask: *error
            MinLengthTask: *min_length
            TrajOptMotionPlannerTask:
              class: TrajOptMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [min_len_output_data]
                outputs: [trajopt_output_data]
                format_result_as_input: false
            DiscreteContactCheckTask:
              class: DiscreteContactCheckTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
            ConstantTCPSpeedTimeParameterizationTask:
              class: ConstantTCPSpeedTimeParameterizationTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
                outputs: [output_data]
            KinematicLimitsCheckTask: *limits_check
          edges:
            - source: MinLengthTask
              destinations: [ErrorTask, TrajOptMotionPlannerTask]
            - source: TrajOptMotionPlannerTask
              destinations: [ErrorTask, DiscreteContactCheckTask]
            - source: DiscreteContactCheckTask
              destinations: [ErrorTask, ConstantTCPSpeedTimeParameterizationTask]
            - source: ConstantTCPSpeedTimeParameterizationTask
              destinations: [ErrorTask, KinematicLimitsCheckTask]
            - source: KinematicLimitsCheckTask
              destinations: [ErrorTask, DoneTask]
          terminals: [ErrorTask, DoneTask]
      SNPFreespacePipeline:
        class: GraphTaskFactory
        config:
          inputs: [input_data]
          outputs: [output_data]
          nodes:
            DoneTask: *done
            ErrorTask: *error
            OMPLMotionPlannerTask:
              class: OMPLMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [input_data]
                outputs: [ompl_output_data]
                format_result_as_input: true
            MinLengthTask:
              class: MinLengthTaskFactory
              config:
                conditional: true
                inputs: [ompl_output_data]
                outputs: [min_len_output_data]
                format_result_as_input: false
            TrajOptMotionPlannerTask:
              class: TrajOptMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [min_len_output_data]
                outputs: [trajopt_output_data]
                format_result_as_input: false
            DiscreteContactCheckTask:
              class: DiscreteContactCheckTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
            IterativeSplineParameterizationTask:
              class: IterativeSplineParameterizationTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
                outputs: [output_data]
            KinematicLimitsCheckTask: *limits_check
          edges:
            - source: OMPLMotionPlannerTask
              destinations: [ErrorTask, MinLengthTask]
            - source: MinLengthTask
              destinations: [ErrorTask, TrajOptMotionPlannerTask]
            - source: TrajOptMotionPlannerTask
              destinations: [ErrorTask, DiscreteContactCheckTask]
            - source: DiscreteContactCheckTask
              destinations: [ErrorTask, IterativeSplineParameterizationTask]
            - source: IterativeSplineParameterizationTask
              destinations: [ErrorTask, KinematicLimitsCheckTask]
            - source: KinematicLimitsCheckTask
              destinations: [ErrorTask, DoneTask]
          terminals: [ErrorTask, DoneTask]
      SNPTransitionPipeline:
        class: GraphTaskFactory
        config:
          inputs: [input_data]
          outputs: [output_data]
          nodes:
            DoneTask: *done
            ErrorTask: *error
            MinLengthTask: *min_length
            TrajOptMotionPlannerTask:
              class: TrajOptMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [min_len_output_data]
                outputs: [trajopt_output_data]
                format_result_as_input: false
            OMPLMotionPlannerTask:
              class: OMPLMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [input_data]
                outputs: [ompl_output_data]
                format_result_as_input: false
            DiscreteContactCheckTask_TrajOpt:
              class: DiscreteContactCheckTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
            DiscreteContactCheckTask_OMPL:
              class: DiscreteContactCheckTaskFactory
              config:
                conditional: true
                inputs: [ompl_output_data]
            IterativeSplineParameterizationTask_TrajOpt:
              class: IterativeSplineParameterizationTaskFactory
              config:
                conditional: true
                inputs: [trajopt_output_data]
                outputs: [output_data]
            IterativeSplineParameterizationTask_OMPL:
              class: IterativeSplineParameterizationTaskFactory
              config:
                conditional: true
                inputs: [ompl_output_data]
                outputs: [output_data]
            KinematicLimitsCheckTask: *limits_check
          edges:
            - source: MinLengthTask
              destinations: [ErrorTask, TrajOptMotionPlannerTask]
            - source: TrajOptMotionPlannerTask
              destinations: [OMPLMotionPlannerTask, DiscreteContactCheckTask_TrajOpt]
            - source: DiscreteContactCheckTask_TrajOpt
              destinations: [OMPLMotionPlannerTask, IterativeSplineParameterizationTask_TrajOpt]
            - source: IterativeSplineParameterizationTask_TrajOpt
              destinations: [ErrorTask, KinematicLimitsCheckTask]
            - source: OMPLMotionPlannerTask
              destinations: [ErrorTask, DiscreteContactCheckTask_OMPL]
            - source: DiscreteContactCheckTask_OMPL
              destinations: [ErrorTask, IterativeSplineParameterizationTask_OMPL]
            - source: IterativeSplineParameterizationTask_OMPL
              destinations: [ErrorTask, KinematicLimitsCheckTask]
            - source: KinematicLimitsCheckTask
              destinations: [ErrorTask, DoneTask]
          terminals: [ErrorTask, DoneTask]
      SNPPipeline:
        class: GraphTaskFactory
        config:
          inputs: [input_data]
          outputs: [output_data]
          nodes:
            DoneTask: *done
            ErrorTask: *error
            DescartesMotionPlannerTask:
              class: DescartesFMotionPlannerTaskFactory
              config:
                conditional: true
                inputs: [input_data]
                outputs: [descartes_output_data]
                format_result_as_input: true
            RasterMotionTask:
              class: RasterMotionTaskFactory
              config:
                conditional: true
                inputs: [descartes_output_data]
                outputs: [output_data]
                freespace:
                  task: SNPFreespacePipeline
                  config:
                    remapping:
                      input_data: input_data
                      output_data: output_data
                    indexing:
                      - input_data
                      - output_data
                      - min_len_output_data
                      - trajopt_output_data
                      - ompl_output_data
                raster:
                  task: SNPCartesianPipeline
                  config:
                    remapping:
                      input_data: input_data
                      output_data: output_data
                    indexing:
                      - input_data
                      - output_data
                      - min_len_output_data
                      - trajopt_output_data
                transition:
                  task: SNPTransitionPipeline
                  config:
                    remapping:
                      input_data: input_data
                      output_data: output_data
                    indexing:
                      - input_data
                      - output_data
                      - min_len_output_data
                      - trajopt_output_data
                      - ompl_output_data
            TCPSpeedLimiterTask:
              class: TCPSpeedLimiterTaskFactory
              config:
                conditional: true
                inputs: [output_data]
                outputs: [output_data]
          edges:
            - source: DescartesMotionPlannerTask
              destinations: [ErrorTask, RasterMotionTask]
            - source: RasterMotionTask
              destinations: [ErrorTask, TCPSpeedLimiterTask]
            - source: TCPSpeedLimiterTask
              destinations: [ErrorTask, DoneTask]
          terminals: [ErrorTask, DoneTask]
